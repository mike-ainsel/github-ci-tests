name: "[W] java-gradle-app"

on:
  workflow_dispatch:
    inputs:
      build-docker:
        type: boolean
        description: "Run 'docker' job"
        required: false
        default: true

      build-archive:
        type: boolean
        description: "Run 'archive' job"
        required: false
        default: true

      release-to-s3:
        type: boolean
        description: "Upload release archive to S3"
        required: false
        default: true

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - uses: milaboratory/github-ci/actions/context/init@v2
      - id: context
        uses: milaboratory/github-ci/actions/context@v2

    outputs:
      is-release: ${{ steps.context.outputs.is-release }}

  run:
    needs:
      - init

    uses: milaboratory/github-ci/.github/workflows/java-gradle-app.yaml@v2-beta
    with:
      java-version: '11'
      app-name: JAVA Gradle App
      app-name-slug: 'gradle-stub-app'
      build-project: 'stub-app'
      build-project-dir: './gradle'

      test-unit: true
      test-integration: true

      dist-docker: ${{ github.event.inputs.build-docker }}
      dist-archive: ${{ github.event.inputs.build-archive }}

      release-to-s3: ${{ github.event.inputs.release-to-s3 }}
      release-s3-add-version: ${{ fromJSON(needs.init.outputs.is-release) }}
      release-s3-add-sha: ${{ fromJSON(needs.init.outputs.is-release) && 'false' || '16' }}
      notify-telegram: true

    secrets:
      GRADLE_PROPERTIES: |
        miGitHubMavenUser=${{ github.actor }}
        miGitHubMavenToken=${{ secrets.GITHUB_TOKEN }}

      AWS_KEY_ID: ${{ secrets.AWS_CI_ACCESS_KEY_ID }}
      AWS_KEY_SECRET: ${{ secrets.AWS_CI_SECRET_ACCESS_KEY }}

      TELEGRAM_NOTIFICATION_TARGET: "95899978"
      TELEGRAM_API_TOKEN: ${{ secrets.TG_CI_BOT_TOKEN }}
