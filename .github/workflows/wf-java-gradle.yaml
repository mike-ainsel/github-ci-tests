name: "[W] java-gradle"

on:
  workflow_dispatch:
    inputs:
      build-docker:
        type: boolean
        description: "Run 'docker' job"
        required: false
        default: true

      build-archive:
        type: boolean
        description: "Run 'archive' job"
        required: false
        default: true
      build-archive-tasks:
        type: string
        description: "Tasks to run for archive distribution"
        required: false
        default: distTar

      build-library:
        type: boolean
        description: "Run 'library' job"
        required: false
        default: true

      test-unit:
        type: boolean
        description: "Run unit tests"
        required: false
        default: true

      test-integration:
        type: boolean
        description: "Run integration tests"
        required: false
        default: true

      dev-to-s3:
        type: boolean
        description: "Upload devs to S3"
        required: false
        default: false

      release-to-s3:
        type: boolean
        description: "Upload releases to S3"
        required: false
        default: true

      notify-build:
        type: choice
        description: "Notify 'build' step"
        required: true
        options:
          - 'true'
          - 'success-only'
          - 'failure-only'
          - 'false'
        default: 'true'

jobs:
  init:
    runs-on: ubuntu-latest
    steps:
      - uses: milaboratory/github-ci/actions/context/init@v2
      - id: context
        uses: milaboratory/github-ci/actions/context@v2

    outputs:
      is-release: ${{ steps.context.outputs.is-release }}

  run:
    needs:
      - init

    uses: milaboratory/github-ci/.github/workflows/java-gradle.yaml@v2-beta
    with:
      product-name: JAVA Gradle App
      product-name-slug: 'gradle-stub-app'

      java-version: '11'
      build-project: 'stub-app'
      build-project-dir: './gradle'

      test-unit: ${{ fromJSON(github.event.inputs.test-unit) }}
      test-integration: ${{ fromJSON(github.event.inputs.test-integration) }}

      dist-docker: ${{ fromJSON(github.event.inputs.build-docker) }}

      dist-library: ${{ fromJSON(github.event.inputs.build-library) }}
      dist-library-dev-tasks: publishAllPublicationsToGitHubRepository
      dist-library-release-tasks: ''

      dist-archive: ${{ fromJSON(github.event.inputs.build-archive) }}
      dist-archive-tasks: ${{ github.event.inputs.build-archive-tasks }}
      dist-archive-paths: |-
        ./distributions/*.tar
        ./libs/*.jar

      dist-archive-s3: ${{ fromJSON(github.event.inputs.dev-to-s3) }}
      dist-archive-s3-add-version: false
      dist-archive-s3-add-sha: 'false'

      release-to-s3: ${{ fromJSON(github.event.inputs.release-to-s3) }}
      release-s3-add-version: ${{ fromJSON(needs.init.outputs.is-release) }}
      release-s3-add-sha: ${{ fromJSON(needs.init.outputs.is-release) && 'false' || '16' }}

      notify-telegram: true
      notify-build: ${{ github.event.inputs.notify-build }}

    secrets:
      env: |
        { "MY_VAR_1": "some value" }

      GRADLE_PROPERTIES: |
        miGitHubMavenUser=${{ github.actor }}
        miGitHubMavenToken=${{ secrets.GITHUB_TOKEN }}

      AWS_KEY_ID: ${{ secrets.AWS_CI_ACCESS_KEY_ID }}
      AWS_KEY_SECRET: ${{ secrets.AWS_CI_SECRET_ACCESS_KEY }}

      TELEGRAM_NOTIFICATION_TARGET: "95899978"
      TELEGRAM_API_TOKEN: ${{ secrets.TG_CI_BOT_TOKEN }}
