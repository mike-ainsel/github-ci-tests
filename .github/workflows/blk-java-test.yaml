name: "[B] java/test"

on:
  push:
    tags: [ '*' ]
    paths:
      - .github/workflows/blk-java-test.yaml

  workflow_dispatch:

jobs:
  init:
    runs-on: ubuntu-latest

    steps:
      - uses: milaboratory/github-ci/actions/context/init@v1

  test-with-upload:
    runs-on: ubuntu-latest

    needs:
      - init

    steps:
      - uses: actions/checkout@v2

      - uses: milaboratory/github-ci/blocks/java/test@v2-beta
        id: test
        with:
          project: 'stub-lib'
          tasks: 'test'
          project-dir: './gradle'

          java-version: '11'
          cache-key: temurin-11-v1

          hook-before: .mi-ci/hooks/test-unit-before.sh
          hook-after: .mi-ci/hooks/test-unit-after.sh

          s3-key-id: ${{ secrets.AWS_CI_ACCESS_KEY_ID }}
          s3-key-secret: ${{ secrets.AWS_CI_SECRET_ACCESS_KEY }}
          s3-bucket: 'milaboratory-artefacts-public-files'
          upload-report: 'true'

    outputs:
      uploaded: ${{ steps.test.outputs.report-uploaded }}

  test-no-upload:
    runs-on: ubuntu-latest

    needs:
      - init

    steps:
      - uses: actions/checkout@v2

      - uses: milaboratory/github-ci/blocks/java/test@v2-beta
        id: test
        with:
          project: 'stub-lib'
          tasks: 'test'
          project-dir: './gradle'

          java-version: '11'
          cache-key: temurin-11-v1

          hook-before: .mi-ci/hooks/test-unit-before.sh
          hook-after: .mi-ci/hooks/test-unit-after.sh

          s3-key-id: ${{ secrets.AWS_CI_ACCESS_KEY_ID }}
          s3-key-secret: ${{ secrets.AWS_CI_SECRET_ACCESS_KEY }}
          s3-bucket: 'milaboratory-artefacts-public-files'
          upload-report: 'false'

    outputs:
      uploaded: ${{ steps.test.outputs.report-uploaded }}

  check:
    runs-on: ubuntu-latest

    needs:
      - test-with-upload
      - test-no-upload

    steps:
      - uses: milaboratory/github-ci/actions/action-test@v1
        env:
          TEST_WITH_UPLOAD_UPLOADED: ${{ needs.test-with-upload.outputs.uploaded }}

          TEST_NO_UPLOAD_UPLOADED: ${{ needs.test-no-upload.outputs.uploaded }}
        with:
          test: |
            test_equals "'upload-report' true" "true" "${TEST_WITH_UPLOAD_UPLOADED}"
            test_equals "'upload-report' false" "false" "${TEST_NO_UPLOAD_UPLOADED}"
