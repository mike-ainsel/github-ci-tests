name: "[A] shell"

on:
  workflow_dispatch:

jobs:
  test-stdout:
    runs-on: ubuntu-latest

    steps:
      - id: sh
        uses: milaboratory/github-ci/actions/shell@v1-beta
        with:
          dump-stdout: true

          run: |
            echo "text line 1"
            echo "text line 2"

    outputs:
      stdout: ${{ steps.sh.outputs.stdout }}

  test-outputs:
    runs-on: ubuntu-latest

    steps:
      - id: sh
        uses: milaboratory/github-ci/actions/shell@v1-beta
        with:
          dump-stdout: false

          run: |
            ghwa_set_output "var1" "line1
            line2"

            ghwa_set_output "var2" "single-line"

    outputs:
      stdout: ${{ steps.sh.outputs.stdout }}
      var1: ${{ fromJSON(steps.sh.outputs.data).var1 }}
      var2: ${{ fromJSON(steps.sh.outputs.data).var2 }}

  check-stdout:
    runs-on: ubuntu-latest
    needs:
      - test-stdout

    steps:
      - name: Test output
        uses: milaboratory/github-ci/actions/action-test@v1
        env:
          OUTPUT_EXPECTED: |-
            text line 1
            text line 2
          OUTPUT_ACTUAL: ${{ needs.test-stdout.outputs.stdout }}
        with:
          test: |
            test_equals "Stdout dump check" \
              "${OUTPUT_EXPECTED}" \
              "${OUTPUT_ACTUAL}"

  check-outputs:
    runs-on: ubuntu-latest
    needs:
      - test-outputs

    steps:
      - name: Test output
        uses: milaboratory/github-ci/actions/action-test@v1
        env:
          VAR1_EXPECTED: |-
            line1
            line2
          VAR1_ACTUAL: ${{ needs.test-outputs.outputs.var1 }}

          VAR2_EXPECTED: single-line
          VAR2_ACTUAL: ${{ needs.test-outputs.outputs.var2 }}
        with:
          test: |
            test_equals "var1 value check" \
              "${VAR1_EXPECTED}" \
              "${VAR1_ACTUAL}"

            test_equals "var2 value check" \
              "${VAR2_EXPECTED}" \
              "${VAR2_ACTUAL}"
