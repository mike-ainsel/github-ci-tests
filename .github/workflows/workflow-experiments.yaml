name: "_ [Experiments]"

on:
  push:
    tags-ignore: [ '*' ]
    branches: [ 'master' ]
    paths:
      - .github/workflows/workflow-experiments.yaml

  workflow_dispatch:

jobs:
  not-started:
    runs-on: ubuntu-latest
    if: "'true' == 'false'"

    steps:
      - shell: bash
        run: 'true'

    outputs:
      # Even constant outputs become initialized only after job start.
      # All outputs of skipped jobs are always empty.
      started: 'true'

  failure:
    runs-on: ubuntu-latest

    steps:
      - shell: bash
        run: 'false'

    outputs:
      # Even constant outputs become initialized only after job start.
      # All outputs of skipped jobs are always empty.
      started: 'true'

  success:
    runs-on: ubuntu-latest

    steps:
      - shell: bash
        run: 'true'

    outputs:
      # Even constant outputs become initialized only after job start.
      # All outputs of skipped jobs are always empty.
      started: 'true'

  cancelled:
    runs-on: ubuntu-latest

    steps:
      - shell: bash
        run: 'sleep 60'

    outputs:
      # Even constant outputs become initialized only after job start.
      # All outputs of skipped jobs are always empty.
      started: 'true'

  check:
    runs-on: ubuntu-latest

    if: always()
    needs:
      - not-started
      - failure
      - success
      - cancelled

    steps:
      - shell: bash
        env:
          NEEDS: ${{ toJSON(needs) }}
        run: |
          echo "Started: '${{ needs.not-started.outputs.started }}'"

          echo "Needs content: "
          jq . <<<"${NEEDS}"


#  git-version:
#    strategy:
#      matrix:
#        os:
#          - ubuntu-latest
#          - macos-latest
#          - windows-latest
#
#    runs-on: ${{ matrix.os }}
#
#    steps:
#      - shell: bash
#        run: git --version

#  fail:
#    runs-on: ubuntu-latest
#    steps:
#      - shell: bash
#        run: 'false'
#
#    outputs:
#      status: ${{ job.status }}
#
#  depend:
#    runs-on: ubuntu-latest
#
#    needs:
#      - fail
#
#    steps:
#      - shell: bash
#        run: "true"
#
#    outputs:
#      status: ${{ job.status }}
#
#  check:
#    runs-on: ubuntu-latest
#    if: always()
#    needs:
#      - depend
#
#    steps:
#      - shell: bash
#        env:
#          DEPEND_STATUS: ${{ needs.depend.outputs.status }}
#        run: |
#          echo "Depend status is: '${JOIN_STATUS}'"
