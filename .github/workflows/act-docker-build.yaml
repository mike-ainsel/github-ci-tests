name: "[A] docker/build"

on:
  push:
    tags-ignore: [ '*' ]
    branches: [ 'master' ]
    paths:
      - .github/workflows/act-docker-build.yaml

  workflow_dispatch:

jobs:
  test-only-tags:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build stub docker image
        uses: milaboratory/github-ci/actions/docker/build@v2-beta
        with:
          dockerfile: ./docker/Dockerfile
          tags: |
            test:0.0.1
            test:latest

      - id: images
        uses: milaboratory/github-ci/actions/shell@v1
        with:
          run: |
            docker image ls --format '{{ if ne .Repository "<none>" }} {{ .Repository }}:{{ .Tag }} {{ end }}' |
              tr -d " " |
              grep --extended-regexp '^test:'

    outputs:
      images: ${{ steps.images.outputs.stdout }}

  test-no-tags:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build stub docker image
        uses: milaboratory/github-ci/actions/docker/build@v2-beta
        with:
          dockerfile: ./docker/Dockerfile
          tags: ''

  test-w-env:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build stub docker image
        uses: milaboratory/github-ci/actions/docker/build@v2-beta
        with:
          dockerfile: ./docker/Dockerfile
          tags: test:0.0.1
          env: |
            MYVAR1=value1
            MY_VAR2=multiline\nvalue

  test-w-args:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Build stub docker image
        uses: milaboratory/github-ci/actions/docker/build@v2-beta
        with:
          dockerfile: ./docker/Dockerfile
          tags: |
            test:0.0.1
            test:latest
          args: |
            NODE_ENV=production
            MYCUSTOM=value

  check:
    runs-on: ubuntu-latest
    needs:
      - test-only-tags

    steps:
      - name: Check tags pushed
        uses: milaboratory/github-ci/actions/action-test@v1
        env:
          ONLY_TAGS_EXPECTED: |-
            test:0.0.1
            test:latest
          ONLY_TAGS_ACTUAL: ${{ needs.test-only-tags.outputs.images }}
        with:
          test: |
            test_equals "Only tags" "${ONLY_TAGS_EXPECTED}" "${ONLY_TAGS_ACTUAL}"
